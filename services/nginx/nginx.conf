
events { }

http {


        upstream website    {
        ip_hash;                        # for sticky sessions, more below
        server                          flask-api:5000 max_fails=3 fail_timeout=10;
    }


    include /etc/nginx/mime.types;
    charset utf-8;
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name nginx-webserver
        real_ip_header    X-Forwarded-For;

        access_log /logs/data-access.log combined;

        root   /usr/share/nginx/html;

        # This will redirect all requests to /api/n to http://flask-data-api:5000/n specified
        location /api/ {
            proxy_pass http://flask-api:5000/;
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect http://flask-api:5000/ $scheme://$http_host/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 20d;
            proxy_buffering off;
        }

        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            expires -1;
            # access_log logs/static.log; # I don't usually include a static log
            }

        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

            # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }

            # Any route that doesn't have a file extension (e.g. /devices)
        location / {
                try_files $uri $uri/ /;
        }




    # error_page   500 502 503 504  /50x.html;

    # location = /50x.html {
    #     root   /usr/share/nginx/html;
    # }
    }
}